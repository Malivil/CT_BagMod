--- ../src_base/minecraft/net/minecraft/util/WeightedRandomChestContent.java
+++ ../src_work/minecraft/net/minecraft/util/WeightedRandomChestContent.java
@@ -4,6 +4,7 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.tileentity.TileEntityChest;
 import net.minecraft.tileentity.TileEntityDispenser;
+import net.minecraftforge.common.ChestGenHooks;
 
 public class WeightedRandomChestContent extends WeightedRandomItem
 {
@@ -40,22 +41,11 @@
         for (int var4 = 0; var4 < par3; ++var4)
         {
             WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(par0Random, par1ArrayOfWeightedRandomChestContent);
-            int var6 = var5.theMinimumChanceToGenerateItem + par0Random.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
+            ItemStack[] stacks = ChestGenHooks.generateStacks(par0Random, var5.theItemId, var5.theMinimumChanceToGenerateItem, var5.theMaximumChanceToGenerateItem);
 
-            if (var5.theItemId.getMaxStackSize() >= var6)
+            for (ItemStack item : stacks)
             {
-                ItemStack var7 = var5.theItemId.copy();
-                var7.stackSize = var6;
-                par2TileEntityChest.setInventorySlotContents(par0Random.nextInt(par2TileEntityChest.getSizeInventory()), var7);
-            }
-            else
-            {
-                for (int var9 = 0; var9 < var6; ++var9)
-                {
-                    ItemStack var8 = var5.theItemId.copy();
-                    var8.stackSize = 1;
-                    par2TileEntityChest.setInventorySlotContents(par0Random.nextInt(par2TileEntityChest.getSizeInventory()), var8);
-                }
+                par2TileEntityChest.setInventorySlotContents(par0Random.nextInt(par2TileEntityChest.getSizeInventory()), item);
             }
         }
     }
@@ -68,22 +58,11 @@
         for (int var4 = 0; var4 < par3; ++var4)
         {
             WeightedRandomChestContent var5 = (WeightedRandomChestContent)WeightedRandom.getRandomItem(par0Random, par1ArrayOfWeightedRandomChestContent);
-            int var6 = var5.theMinimumChanceToGenerateItem + par0Random.nextInt(var5.theMaximumChanceToGenerateItem - var5.theMinimumChanceToGenerateItem + 1);
+            ItemStack[] stacks = ChestGenHooks.generateStacks(par0Random, var5.theItemId, var5.theMinimumChanceToGenerateItem, var5.theMaximumChanceToGenerateItem);
 
-            if (var5.theItemId.getMaxStackSize() >= var6)
+            for (ItemStack item : stacks)
             {
-                ItemStack var7 = var5.theItemId.copy();
-                var7.stackSize = var6;
-                par2TileEntityDispenser.setInventorySlotContents(par0Random.nextInt(par2TileEntityDispenser.getSizeInventory()), var7);
-            }
-            else
-            {
-                for (int var9 = 0; var9 < var6; ++var9)
-                {
-                    ItemStack var8 = var5.theItemId.copy();
-                    var8.stackSize = 1;
-                    par2TileEntityDispenser.setInventorySlotContents(par0Random.nextInt(par2TileEntityDispenser.getSizeInventory()), var8);
-                }
+                par2TileEntityDispenser.setInventorySlotContents(par0Random.nextInt(par2TileEntityDispenser.getSizeInventory()), item);
             }
         }
     }
