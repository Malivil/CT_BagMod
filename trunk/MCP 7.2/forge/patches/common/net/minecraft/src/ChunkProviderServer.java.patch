--- ../src_base/common/net/minecraft/src/ChunkProviderServer.java
+++ ../src_work/common/net/minecraft/src/ChunkProviderServer.java
@@ -7,6 +7,8 @@
 import java.util.List;
 import java.util.Set;
 
+import net.minecraftforge.common.ForgeChunkManager;
+
 import cpw.mods.fml.common.registry.GameRegistry;
 
 public class ChunkProviderServer implements IChunkProvider
@@ -93,7 +95,11 @@
 
         if (var5 == null)
         {
-            var5 = this.safeLoadChunk(par1, par2);
+            var5 = ForgeChunkManager.fetchDormantChunk(var3);
+            if (var5 == null)
+            {
+                var5 = this.safeLoadChunk(par1, par2);
+            }
 
             if (var5 == null)
             {
@@ -274,6 +280,11 @@
     {
         if (!this.currentServer.canNotSave)
         {
+            for (ChunkCoordIntPair forced : currentServer.getPersistentChunks().keySet())
+            {
+                this.chunksToUnload.remove(ChunkCoordIntPair.chunkXZ2Int(forced.chunkXPos, forced.chunkZPos));
+            }
+
             for (int var1 = 0; var1 < 100; ++var1)
             {
                 if (!this.chunksToUnload.isEmpty())
@@ -286,6 +297,7 @@
                     this.chunksToUnload.remove(var2);
                     this.loadedChunkHashMap.remove(var2.longValue());
                     this.loadedChunks.remove(var3);
+                    ForgeChunkManager.putDormantChunk(ChunkCoordIntPair.chunkXZ2Int(var3.xPosition, var3.zPosition), var3);
                 }
             }
 
